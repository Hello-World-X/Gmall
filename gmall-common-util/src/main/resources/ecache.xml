<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../config/ehcache.xsd">

    <!-- 这个是磁盘存储路径，当内存缓存满了的时候，就会往这里面放，
        java.io.tmdir是操作系统缓存的临时目录，不同操作系统缓存目录不一样。-->
    <diskStore path="java.io.tmpdir"/>

    <!--defaultCache:echcache的默认缓存策略  -->
    <defaultCache
            overflowToDisk="true"
            maxElementsInMemory="10000"
            eternal="false"
            timeToIdleSeconds="120"
            timeToLiveSeconds="120"
            maxElementsOnDisk="10000000"
            diskExpiryThreadIntervalSeconds="120"
            memoryStoreEvictionPolicy="LRU">
        <persistence strategy="localTempSwap"/>
    </defaultCache>

    <cache name="users"
           overflowToDisk="true"
           maxElementsInMemory="10000"
           eternal="false"
           timeToIdleSeconds="120"
           timeToLiveSeconds="120"
           maxElementsOnDisk="10000000"
           diskExpiryThreadIntervalSeconds="120"
           memoryStoreEvictionPolicy="LRU">
        <persistence strategy="localTempSwap"/>
    </cache>

    <!-- defaultCache是默认缓存方式，cache是自定义的缓存方式，自行设置name
         maxElementsInMemory      内存缓存中最多可以存放的元素数量,若放入Cache中的元素超过这个数值,则有以下两种情况
            1)若overflowToDisk=true,则会将Cache中多出的元素放入磁盘文件中
            2)若overflowToDisk=false,则根据memoryStoreEvictionPolicy策略替换Cache中原有的元素

         eternal                  缓存中对象是否永久有效
         overflowToDisk           内存不足时,是否启用磁盘缓存
         timeToIdleSeconds        缓存数据在失效前的允许闲置时间(单位:秒)，仅当eternal=false时使用,
            默认值是0表示可闲置时间无穷大,若超过这个时间没有访问此Cache中的某个元素,那么此元素将被从Cache中清除
         timeToLiveSeconds        缓存数据的总的存活时间（单位：秒），仅当eternal=false时使用，从创建开始计时，失效结束。
         maxElementsOnDisk        磁盘缓存中最多可以存放的元素数量,0表示无穷大
         diskExpiryThreadIntervalSeconds   磁盘缓存的清理线程运行间隔,默认是120秒
         memoryStoreEvictionPolicy   内存存储与释放策略,即达到maxElementsInMemory限制时,Ehcache会根据指定策略清理内存
            共有三种策略,分别为LRU(最近最少使用)、LFU(最常用的)、FIFO(先进先出)


         -->
</ehcache>