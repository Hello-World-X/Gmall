# 服务端口
server.port=8070
server.servlet-path=/
server.session.cookie.name=SESSION1

auth-server=http://localhost:8085/index
security.basic.enabled=true
security.oauth2.client.client-id=SampleClientId
security.oauth2.client.client-secret=secret
security.oauth2.client.access-token-uri=${auth-server}/oauth/token
security.oauth2.client.user-authorization-uri=${auth-server}/oauth/authorize
security.oauth2.resource.user-info-uri=${auth-server}/user




# jdbc
spring.datasource.url=jdbc:mysql://localhost:3306/gmall?characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=Gepoint

# mybtais 配置
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
mybatis.configuration.map-underscore-to-camel-case=true

# 日志级别
logging.level.root=info

# dubbo 配置
# dubbo 应用名称
spring.dubbo.application=user-service
# dubbo 通信协议名称
spring.dubbo.protocol.name=dubbo
# zookeeper 注册中心地址
spring.dubbo.registry.address=39.101.198.56:2181
# zookeeper 通信协议名称
spring.dubbo.registry.protocol=zookeeper
# dubbo 包扫描
spring.dubbo.base-package=com.gmall
# 设置超时时间
spring.dubbo.consumer.timeout=600000
# 设置是否检查服务存在
spring.dubbo.consumer.check=false


# redis 连接地址
spring.redis.host=39.101.198.56
# redis 端口
spring.redis.port=6379
# redis 连接数据库
spring.redis.database=0
# auth 密码
spring.redis.password=Xr20190101!
# 取连接时检测是否有可用连接
spring.redis.testOnBorrow=false
# 取连接时检测是否有可用连接
spring.redis.testOnReturnt=false
# 最大活跃数
spring.redis.pool.max-active=20
# 最大等待数
spring.redis.pool.max-wait=5
# 线程池最小保持数
spring.redis.pool.min-idle=5
# 超时时间设置
spring.redis.timeout=20000
